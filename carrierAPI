{
    "openapi": "3.0.0",
    "info": {
        "title": "BigBuy API",
        "description": "# Important notices\n<div class=\"alert alert-danger\">\n  <strong>XML format is deprecated<\/strong> as of May 20, 2023 and <strong>will no longer be supported on BigBuy API after september 1st, 2023<\/strong>. We recommend our customers to migrate to JSON as soon as possible\n<\/div>\n\n# Generated SDK's\n<ul>\n  <li><a href=\"\/rest\/sdk\/generator\/php\">Php<\/a><\/li>\n  <li><a href=\"\/rest\/sdk\/generator\/java\">Java<\/a><\/li>\n  <li><a href=\"\/rest\/sdk\/generator\/python\">Python<\/a><\/li>\n<\/ul>\n\n# Rate Limit\n<div class=\"sc-6itmo6-0 diqfaT\">\n  <div class=\"redoc-markdown  sc-bZQynM cBVhst\"><p>In this section, you learn how to check your rate limits and request exceptions.<\/p>\n    <p>Check your rate limits with BigBuy rate limit headers<\/p>\n    <ul>\n      <li>X-RateLimit-Limit - the rate limit ceiling that is applicable for the current request.<\/li>\n    <\/ul>\n    <p>For example:<\/p>\n    <pre><code>  HTTP<span class=\"token operator\">\/<\/span><span class=\"token number\">1.1<\/span> <span class=\"token number\">200<\/span> OK\n    X<span class=\"token operator\">-<\/span>RateLimit<span class=\"token operator\">-<\/span>Limit<span class=\"token punctuation\">:<\/span> <span class=\"token number\">1200<\/span><\/code><\/pre>\n  <\/div>\n<\/div>\n\n# Authentication\n<div class=\"redoc-markdown sc-bZQynM cBVhst\">\n    <p>BigBuy API offers one form of authentication in header:<\/p>\n    <pre><code>Authorization<span class=\"token punctuation\">:<\/span> Bearer API_KEY<\/code><\/pre> \n<\/div>\n",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https:\/\/api.bigbuy.eu",
            "description": "Production environment"
        },
        {
            "url": "https:\/\/api.sandbox.bigbuy.eu",
            "description": "Test environment"
        }
    ],
    "paths": {
        "\/rest\/catalog\/attributes.{format}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Returns all attributes.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attributes",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Attribute"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no attributes were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No attributes found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n     require_once(__DIR__ . '\/vendor\/autoload.php');\n     \/\/ Configure HTTP bearer authorization: Bearer\n     $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n     ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n     $apiInstance = new Swagger\\Client\\Api\\AttributeApi(\n     \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n     \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n     new GuzzleHttp\\Client(),\n     $config\n     );\n     $format = 'format_example'; \/\/ string | Response format, defaults to json\n     $page = 56; \/\/ int | Default 0\n     $page_size = 56; \/\/ int | Default 0\n\n     try {\n        $result = $apiInstance->getRestCatalogAttributes($format, $page, $page_size);\n        print_r($result);\n     } catch (Exception $e) {\n        echo 'Exception when calling AttributeApi->getRestCatalogAttributes: ', $e->getMessage(), PHP_EOL;\n     }\n     ?>"
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n     \/\/import io.swagger.client.ApiClient;\n     \/\/import io.swagger.client.ApiException;\n     \/\/import io.swagger.client.Configuration;\n     \/\/import io.swagger.client.auth.*;\n     \/\/import io.swagger.client.api.AttributeApi;\n\n     ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n     AttributeApi apiInstance = new AttributeApi();\n     String format = 'format_example'; \/\/ String | Response format, defaults to json\n     Integer page = 56; \/\/ Integer | Default 0\n     Integer pageSize = 56; \/\/ Integer | Default 0\n\n     try {\n        List<Attribute> result = apiInstance.getRestCatalogAttributes(format, page, pageSize);\n        System.out.println(result);\n     } catch (ApiException e) {\n        System.err.println('Exception when calling AttributeApi#getRestCatalogAttributes'   );\n        e.printStackTrace();\n     }"
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n     import time\n     import swagger_client\n     from swagger_client.rest import ApiException\n     from pprint import pprint\n\n     # create an instance of the API class\n     api_instance = swagger_client.AttributeApi(swagger_client.ApiClient(configuration))\n     format = 'format_example' # str | Response format, defaults to json\n     page = 56 # int | Default 0 (optional)\n     page_size = 56 # int | Default 0 (optional)\n\n     try:\n     # Returns all attributes.\n     api_response = api_instance.get_rest_catalog_attributes(format, page=page, page_size=page_size)\n     pprint(api_response)\n     except ApiException as e:\n     print('Exception when calling AttributeApi->get_rest_catalog_attributes: %s\\n' % e)\n     "
                    }
                ]
            }
        },
        "\/rest\/catalog\/attribute\/{id}.{format}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Returns attribute.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attribute_id",
                "parameters": [
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Attribute"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no attribute was found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No attribute found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n     require_once(__DIR__ . '\/vendor\/autoload.php');\n     \/\/ Configure HTTP bearer authorization: Bearer\n     $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n     ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n     $apiInstance = new Swagger\\Client\\Api\\AttributeApi(\n     \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n     \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n     new GuzzleHttp\\Client(),\n     $config\n     );\n     $id = 'id_example'; \/\/ string |\n     $format = 'format_example'; \/\/ string |\n\n     try {\n         $result = $apiInstance->getRestCatalogAttributeId($id, $format);\n         print_r($result);\n     } catch (Exception $e) {\n         echo 'Exception when calling AttributeApi->getRestCatalogAttributeId: ', $e->getMessage(), PHP_EOL;\n     }\n     ?>"
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n     \/\/import io.swagger.client.ApiClient;\n     \/\/import io.swagger.client.ApiException;\n     \/\/import io.swagger.client.Configuration;\n     \/\/import io.swagger.client.auth.;\n     \/\/import io.swagger.client.api.AttributeApi;\n\n     ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n     AttributeApi apiInstance = new AttributeApi();\n     String id = 'id_example'; \/\/ String |\n     String format = 'format_example'; \/\/ String |\n\n     try {\n        Attribute result = apiInstance.getRestCatalogAttributeId(id, format);\n        System.out.println(result);\n     } catch (ApiException e) {\n        System.err.println('Exception when calling AttributeApi#getRestCatalogAttributeId');\n        e.printStackTrace();\n     }"
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n     import time\n     import swagger_client\n     from swagger_client.rest import ApiException\n     from pprint import pprint\n\n     # create an instance of the API class\n     api_instance = swagger_client.AttributeApi(swagger_client.ApiClient(configuration))\n     id = 'id_example' # str |\n     format = 'format_example' # str |\n\n     try:\n     # Returns attribute.\n     api_response = api_instance.get_rest_catalog_attribute_id(id, format)\n     pprint(api_response)\n     except ApiException as e:\n     print('Exception when calling AttributeApi->get_rest_catalog_attribute_id: %s\\n' % e)\n     "
                    }
                ]
            }
        },
        "\/rest\/catalog\/attributealllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Returns a single attribute all languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attributealllanguages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Attribute"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no attribute was found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No attribute found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\AttributeApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogAttributealllanguages($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling AttributeApi->getRestCatalogAttributealllanguages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>"
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.AttributeApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    AttributeApi apiInstance = new AttributeApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        List<Attribute> result = apiInstance.getRestCatalogAttributealllanguages(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling AttributeApi#getRestCatalogAttributealllanguages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.AttributeApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns a single attribute all languages.\n    api_response = api_instance.get_rest_catalog_attributealllanguages(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling AttributeApi->get_rest_catalog_attributealllanguages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/attributegroups.{format}": {
            "get": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Returns all attribute groups.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attributegroups",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/AttributeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no attributeGroups were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No attributeGroups found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\AttributeGroupApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogAttributegroups($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling AttributeGroupApi->getRestCatalogAttributegroups: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.AttributeGroupApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    AttributeGroupApi apiInstance = new AttributeGroupApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<AttributeGroup> result = apiInstance.getRestCatalogAttributegroups(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling AttributeGroupApi#getRestCatalogAttributegroups');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.AttributeGroupApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all attribute groups.\n    api_response = api_instance.get_rest_catalog_attributegroups(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling AttributeGroupApi->get_rest_catalog_attributegroups: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/attributegroup\/{id}.{format}": {
            "get": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Returns attribute group by id.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attributegroup",
                "parameters": [
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttributeGroup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no attributeGroup found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No attributeGroup found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\AttributeGroupApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n    $result = $apiInstance->getRestCatalogAttributegroup($id, $format);\n    print_r($result);\n    } catch (Exception $e) {\n    echo 'Exception when calling AttributeGroupApi->getRestCatalogAttributegroup: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.AttributeGroupApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n\n    AttributeGroupApi apiInstance = new AttributeGroupApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n    AttributeGroup result = apiInstance.getRestCatalogAttributegroup(id, format);\n    System.out.println(result);\n    } catch (ApiException e) {\n    System.err.println('Exception when calling AttributeGroupApi#getRestCatalogAttributegroup');\n    e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.AttributeGroupApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns attribute group by id.\n    api_response = api_instance.get_rest_catalog_attributegroup(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling AttributeGroupApi->get_rest_catalog_attributegroup: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/attributegroupalllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "AttributeGroup"
                ],
                "summary": "Returns single attribute group all languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_attributegroup_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/AttributeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no attributeGroup found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No attributeGroup found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\AttributeGroupApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n    $result = $apiInstance->getRestCatalogAttributegroupId($id, $format);\n    print_r($result);\n    } catch (Exception $e) {\n    echo 'Exception when calling AttributeGroupApi->getRestCatalogAttributegroupId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.AttributeGroupApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    AttributeGroupApi apiInstance = new AttributeGroupApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n    List<AttributeGroup> result = apiInstance.getRestCatalogAttributegroupId(id, format);\n    System.out.println(result);\n    } catch (ApiException e) {\n    System.err.println('Exception when calling AttributeGroupApi#getRestCatalogAttributegroupId');\n    e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.AttributeGroupApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns single attribute group all languages.\n    api_response = api_instance.get_rest_catalog_attributegroup_id(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling AttributeGroupApi->get_rest_catalog_attributegroup_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/categories.{format}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Lists all categories.",
                "description": "<b>Deprecated: Use \/taxonomies instead<\/b><br>\n            <h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_categories",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Category"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no categories were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No categories found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\CategoryApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogCategories($format, $iso_code, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling CategoryApi->getRestCatalogCategories: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.CategoryApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    CategoryApi apiInstance = new CategoryApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<Category> result = apiInstance.getRestCatalogCategories(format, isoCode, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling CategoryApi#getRestCatalogCategories');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.CategoryApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Lists all categories.\n    api_response = api_instance.get_rest_catalog_categories(format, iso_code=iso_code, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling CategoryApi->get_rest_catalog_categories: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/category\/{id}.{format}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Returns the selected category by id.",
                "description": "<b>Deprecated: Use \/taxonomy\/{id} instead<\/b><br>\n            <h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_category",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no category found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No category found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\CategoryApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogCategory($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling CategoryApi->getRestCatalogCategory: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.CategoryApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    CategoryApi apiInstance = new CategoryApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        Category result = apiInstance.getRestCatalogCategory(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling CategoryApi#getRestCatalogCategory');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.CategoryApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns the selected category by id.\n    api_response = api_instance.get_rest_catalog_category(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling CategoryApi->get_rest_catalog_category: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/categoryalllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Returns the selected category all languages.",
                "description": "<b>Deprecated: Use \/taxonomyalllanguages\/{id} instead<\/b><br>\n            <h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_category_all_languages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Category"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no category found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No category found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\CategoryApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogCategoryAllLanguages($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling CategoryApi->getRestCatalogCategoryAllLanguages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.CategoryApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    CategoryApi apiInstance = new CategoryApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        List<Category> result = apiInstance.getRestCatalogCategoryAllLanguages(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling CategoryApi#getRestCatalogCategoryAllLanguages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.CategoryApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns the selected category all languages.\n    api_response = api_instance.get_rest_catalog_category_all_languages(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling CategoryApi->get_rest_catalog_category_all_languages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/languages.{format}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Returns all languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_languages",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Language"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\LanguageApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n\n    try {\n        $result = $apiInstance->getRestCatalogLanguages($format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling LanguageApi->getRestCatalogLanguages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.LanguageApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    LanguageApi apiInstance = new LanguageApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    try {\n        List<Language> result = apiInstance.getRestCatalogLanguages(format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling LanguageApi#getRestCatalogLanguages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.LanguageApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n\n    try:\n    # Returns all languages.\n    api_response = api_instance.get_rest_catalog_languages(format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling LanguageApi->get_rest_catalog_languages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/manufacturers.{format}": {
            "get": {
                "tags": [
                    "Manufacturer"
                ],
                "summary": "Returns all manufacturers.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>5<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_manufacturers",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Manufacturer"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no manufacturers were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No manufacturers found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ManufacturerApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogManufacturers($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ManufacturerApi->getRestCatalogManufacturers: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ManufacturerApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ManufacturerApi apiInstance = new ManufacturerApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<Manufacturer> result = apiInstance.getRestCatalogManufacturers(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ManufacturerApi#getRestCatalogManufacturers');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ManufacturerApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all manufacturers.\n    api_response = api_instance.get_rest_catalog_manufacturers(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ManufacturerApi->get_rest_catalog_manufacturers: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/manufacturer\/{id}.{format}": {
            "get": {
                "tags": [
                    "Manufacturer"
                ],
                "summary": "Returns a single manufacturer.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_manufacturer",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Manufacturer id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Manufacturer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no manufacturer found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No manufacturer found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ManufacturerApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string | Manufacturer id\n\n    try {\n        $result = $apiInstance->getRestCatalogManufacturer($format, $id);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ManufacturerApi->getRestCatalogManufacturer: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ManufacturerApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ManufacturerApi apiInstance = new ManufacturerApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String | Manufacturer id\n    try {\n        Manufacturer result = apiInstance.getRestCatalogManufacturer(format, id);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ManufacturerApi#getRestCatalogManufacturer');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ManufacturerApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str | Manufacturer id\n\n    try:\n    # Returns a single manufacturer.\n    api_response = api_instance.get_rest_catalog_manufacturer(format, id)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ManufacturerApi->get_rest_catalog_manufacturer: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productscategories.{format}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Returns all products categories.",
                "description": "<b>Deprecated: Use \/productstaxonomies instead<\/b><br>\n            <h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>2<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_categories",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductCategory"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no productCategories were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No productCategories found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\CategoryApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsCategories($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling CategoryApi->getRestCatalogProductsCategories: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.CategoryApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    CategoryApi apiInstance = new CategoryApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductCategory> result = apiInstance.getRestCatalogProductsCategories(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling CategoryApi#getRestCatalogProductsCategories');\n        e.printStackTrace();\n    }\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.CategoryApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products categories.\n    api_response = api_instance.get_rest_catalog_products_categories(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling CategoryApi->get_rest_catalog_products_categories: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productcategories\/{id}.{format}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Returns all categories for a given product.",
                "description": "<b>Deprecated: Use \/producttaxonomies\/{id} instead<\/b><br>\n            <h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_categories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no productCategories found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No productCategories found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\CategoryApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 56; \/\/ int | Product id\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n\n    try {\n        $result = $apiInstance->getRestCatalogProductCategories($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling CategoryApi->getRestCatalogProductCategories: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.CategoryApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    CategoryApi apiInstance = new CategoryApi();\n    Integer id = 56; \/\/ Integer | Product id\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    try {\n        ProductCategory result = apiInstance.getRestCatalogProductCategories(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling CategoryApi#getRestCatalogProductCategories');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.CategoryApi(swagger_client.ApiClient(configuration))\n    id = 56 # int | Product id\n    format = 'format_example' # str | Response format, defaults to json\n\n    try:\n    # Returns all categories for a given product.\n    api_response = api_instance.get_rest_catalog_product_categories(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling CategoryApi->get_rest_catalog_product_categories: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/products.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns all products.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table><b>Maximum page size is 10000<b>",
                "operationId": "get_rest_catalog_product",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductCustomer"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProduct($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProduct: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductCustomer> result = apiInstance.getRestCatalogProduct(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProduct');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products.\n    api_response = api_instance.get_rest_catalog_product(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_product: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/product\/{id}.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a single product.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductCustomer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogProductId($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProductId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        ProductCustomer result = apiInstance.getRestCatalogProductId(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProductId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Get a single product.\n    api_response = api_instance.get_rest_catalog_product_id(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_product_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsinformation.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns all products information.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_information",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductInformation"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products information were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products information found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n    $page_size = 'page_size_example'; \/\/ string | Default 0\n    $page = 'page_example'; \/\/ string | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsInformation($format, $iso_code, $page_size, $page);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProductsInformation: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    String pageSize = 'pageSize_example'; \/\/ String | Default 0\n    String page = 'page_example'; \/\/ String | Default 0\n    try {\n        List<ProductInformation> result = apiInstance.getRestCatalogProductsInformation(format, isoCode, pageSize, page);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProductsInformation');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n    page_size = 'page_size_example' # str | Default 0 (optional)\n    page = 'page_example' # str | Default 0 (optional)\n\n    try:\n    # Returns all products information.\n    api_response = api_instance.get_rest_catalog_products_information(format, iso_code=iso_code, page_size=page_size, page=page)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_products_information: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productinformation\/{id}.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a single product information.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_information_id",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string |\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogProductInformationId($format, $id, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProductInformationId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String |\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        ProductInformation result = apiInstance.getRestCatalogProductInformationId(format, id, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProductInformationId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str |\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get a single product.\n    api_response = api_instance.get_rest_catalog_product_information_id(format, id, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_product_information_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productinformationalllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a single product information languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_information_all_languages_id",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductInformation"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no products information with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No products information found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string | product id\n\n    try {\n        $result = $apiInstance->getRestCatalogProductInformationAllLanguagesId($format, $id);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProductInformationAllLanguagesId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String | product id\n    try {\n        List<ProductInformation> result = apiInstance.getRestCatalogProductInformationAllLanguagesId(format, id);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProductInformationAllLanguagesId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str | product id\n\n    try:\n    # Get a single product information languages.\n    api_response = api_instance.get_rest_catalog_product_information_all_languages_id(format, id)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_product_information_all_languages_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productinformationbysku\/{sku}.{format}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a single product information by sku.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_information_by_sku",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "path",
                        "description": "product sku",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductInformation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product found with sku X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product found with sku X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ProductApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $sku = 'sku_example'; \/\/ string | product sku\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogProductInformationBySku($format, $sku, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ProductApi->getRestCatalogProductInformationBySku: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ProductApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ProductApi apiInstance = new ProductApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String sku = 'sku_example'; \/\/ String | product sku\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        ProductInformation result = apiInstance.getRestCatalogProductInformationBySku(format, sku, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ProductApi#getRestCatalogProductInformationBySku');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ProductApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    sku = 'sku_example' # str | product sku\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get a single product by sku.\n    api_response = api_instance.get_rest_catalog_product_information_by_sku(format, sku, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ProductApi->get_rest_catalog_product_information_by_sku: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsimages.{format}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Returns all products images.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_productsimages",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductImage"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products images were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products images found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ImageApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page_size = 'page_size_example'; \/\/ string | Default 0\n    $page = 'page_example'; \/\/ string | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsimages($format, $page_size, $page);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ImageApi->getRestCatalogProductsimages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ImageApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ImageApi apiInstance = new ImageApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    String pageSize = 'pageSize_example'; \/\/ String | Default 0\n    String page = 'page_example'; \/\/ String | Default 0\n    try {\n        List<ProductImage> result = apiInstance.getRestCatalogProductsimages(format, pageSize, page);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ImageApi#getRestCatalogProductsimages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ImageApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page_size = 'page_size_example' # str | Default 0 (optional)\n    page = 'page_example' # str | Default 0 (optional)\n\n    try:\n    # Returns all products images.\n    api_response = api_instance.get_rest_catalog_productsimages(format, page_size=page_size, page=page)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ImageApi->get_rest_catalog_productsimages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productimages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get a single product images.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_productimages_id",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductImage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product images found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product images found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ImageApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string | Product Id\n\n    try {\n        $result = $apiInstance->getRestCatalogProductimagesId($format, $id);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ImageApi->getRestCatalogProductimagesId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ImageApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ImageApi apiInstance = new ImageApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String | Product Id\n    try {\n        ProductImage result = apiInstance.getRestCatalogProductimagesId(format, id);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ImageApi#getRestCatalogProductimagesId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ImageApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str | Product Id\n\n    try:\n    # Get a single product images.\n    api_response = api_instance.get_rest_catalog_productimages_id(format, id)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ImageApi->get_rest_catalog_productimages_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsstock.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products stock.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_stock",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products stock were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products stock found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsStock($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsStock: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsStock(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsStock');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products stock.\n    api_response = api_instance.get_rest_catalog_products_stock(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_products_stock: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productstock\/{id}.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Get a single product stock.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_stock_id",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductStock"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product stock found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product stock found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $id = 'id_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogProductStockId($format, $id);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductStockId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    String id = 'id_example'; \/\/ String |\n    try {\n        ProductStock result = apiInstance.getRestCatalogProductStockId(format, id);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductStockId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    id = 'id_example' # str |\n\n    try:\n    # Get a single product stock.\n    api_response = api_instance.get_rest_catalog_product_stock_id(format, id)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_product_stock_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsstockbyreference.{format}": {
            "post": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all selected products stock by references.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>25<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_catalog_productsstockbyreference",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProductStockProcess"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Returned when validation errors has been found"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product stock found for productSkus X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product stocks found for productSkus X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\ProductStockRequest(); \/\/ \\Swagger\\Client\\Model\\ProductStockRequest |\n\n    try {\n        $result = $apiInstance->postRestCatalogProductsstockbyreference($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->postRestCatalogProductsstockbyreference: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String |\n    ProductStockRequest body = new ProductStockRequest(); \/\/ ProductStockRequest |\n    try {\n        ProductStock result = apiInstance.postRestCatalogProductsstockbyreference(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#postRestCatalogProductsstockbyreference');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.ProductStockRequest() # ProductStockRequest |  (optional)\n\n    try:\n    # Returns all selected products stock by references.\n    api_response = api_instance.post_rest_catalog_productsstockbyreference(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->post_rest_catalog_productsstockbyreference: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsstockavailable.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products with available stock.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_stock_available",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products stock available were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products stock available found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsStockAvailable($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsStockAvailable: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsStockAvailable(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsStockAvailable');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products with available stock.\n    api_response = api_instance.get_rest_catalog_products_stock_available(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_products_stock_available: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsstockbyhandlingdays.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products stock by handling days.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_productsstockbyhandlingdays",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products stock by handling days were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products stock by handling days found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsstockbyhandlingdays($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsstockbyhandlingdays: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsstockbyhandlingdays(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsstockbyhandlingdays');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products stock by handling days.\n    api_response = api_instance.get_rest_catalog_productsstockbyhandlingdays(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_productsstockbyhandlingdays: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productstags.{format}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Lists all product tags.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_tags",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductTag"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products tags were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products tags found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TagApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n    $page_size = 'page_size_example'; \/\/ string | Default 0\n    $page = 'page_example'; \/\/ string | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsTags($format, $iso_code, $page_size, $page);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TagApi->getRestCatalogProductsTags: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TagApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TagApi apiInstance = new TagApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    String pageSize = 'pageSize_example'; \/\/ String | Default 0\n    String page = 'page_example'; \/\/ String | Default 0\n    try {\n        List<ProductTag> result = apiInstance.getRestCatalogProductsTags(format, isoCode, pageSize, page);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TagApi#getRestCatalogProductsTags');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TagApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n    page_size = 'page_size_example' # str | Default 0 (optional)\n    page = 'page_example' # str | Default 0 (optional)\n\n    try:\n    # Lists all product tags.\n    api_response = api_instance.get_rest_catalog_products_tags(format, iso_code=iso_code, page_size=page_size, page=page)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TagApi->get_rest_catalog_products_tags: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/producttags\/{id}.{format}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a single ProductTag.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_tags_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "productId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductTag"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product tags found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product tags found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TagApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string | productId\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogProductTagsId($id, $format, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TagApi->getRestCatalogProductTagsId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TagApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TagApi apiInstance = new TagApi();\n    String id = 'id_example'; \/\/ String | productId\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        ProductTag result = apiInstance.getRestCatalogProductTagsId(id, format, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TagApi#getRestCatalogProductTagsId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TagApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str | productId\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get a single ProductTag.\n    api_response = api_instance.get_rest_catalog_product_tags_id(id, format, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TagApi->get_rest_catalog_product_tags_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productstaxonomies.{format}": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "Returns all products taxonomies.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>5<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_taxonomies",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductTaxonomy"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products taxonomies were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products taxonomies found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TaxonomyApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsTaxonomies($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TaxonomyApi->getRestCatalogProductsTaxonomies: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TaxonomyApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TaxonomyApi apiInstance = new TaxonomyApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductTaxonomy> result = apiInstance.getRestCatalogProductsTaxonomies(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TaxonomyApi#getRestCatalogProductsTaxonomies');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TaxonomyApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products taxonomies.\n    api_response = api_instance.get_rest_catalog_products_taxonomies(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TaxonomyApi->get_rest_catalog_products_taxonomies: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/producttaxonomies\/{id}.{format}": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "Returns all taxonomies for a given product.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_taxonomies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductTaxonomy"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product taxonomies found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product taxonomies found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TaxonomyApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 56; \/\/ int | Product id\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n\n    try {\n        $result = $apiInstance->getRestCatalogProductTaxonomies($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TaxonomyApi->getRestCatalogProductTaxonomies: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TaxonomyApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TaxonomyApi apiInstance = new TaxonomyApi();\n    Integer id = 56; \/\/ Integer | Product id\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    try {\n        ProductTaxonomy result = apiInstance.getRestCatalogProductTaxonomies(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TaxonomyApi#getRestCatalogProductTaxonomies');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TaxonomyApi(swagger_client.ApiClient(configuration))\n    id = 56 # int | Product id\n    format = 'format_example' # str | Response format, defaults to json\n\n    try:\n    # Returns all taxonomies for a given product.\n    api_response = api_instance.get_rest_catalog_product_taxonomies(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TaxonomyApi->get_rest_catalog_product_taxonomies: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsvariations.{format}": {
            "get": {
                "tags": [
                    "Variation"
                ],
                "summary": "Returns all products variations.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_variations",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductVariation"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products variations were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products variations found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\VariationApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $page_size = 'page_size_example'; \/\/ string | Default 0\n    $page = 'page_example'; \/\/ string | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsVariations($format, $page_size, $page);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling VariationApi->getRestCatalogProductsVariations: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.VariationApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    VariationApi apiInstance = new VariationApi();\n    String format = 'format_example'; \/\/ String |\n    String pageSize = 'pageSize_example'; \/\/ String | Default 0\n    String page = 'page_example'; \/\/ String | Default 0\n    try {\n        List<ProductVariation> result = apiInstance.getRestCatalogProductsVariations(format, pageSize, page);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling VariationApi#getRestCatalogProductsVariations');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.VariationApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    page_size = 'page_size_example' # str | Default 0 (optional)\n    page = 'page_example' # str | Default 0 (optional)\n\n    try:\n    # Returns all products variations.\n    api_response = api_instance.get_rest_catalog_products_variations(format, page_size=page_size, page=page)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling VariationApi->get_rest_catalog_products_variations: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productvariations\/{id}.{format}": {
            "get": {
                "tags": [
                    "Variation"
                ],
                "summary": "Get a single product variations.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_variations_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductVariation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product variations found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product variations found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\VariationApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogProductVariationsId($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling VariationApi->getRestCatalogProductVariationsId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.VariationApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    VariationApi apiInstance = new VariationApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        ProductVariation result = apiInstance.getRestCatalogProductVariationsId(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling VariationApi#getRestCatalogProductVariationsId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.VariationApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Get a single product variations.\n    api_response = api_instance.get_rest_catalog_product_variations_id(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling VariationApi->get_rest_catalog_product_variations_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsvariationsstock.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products variations stock.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_variations_stock",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products variations stock were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products variations stock found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsVariationsStock($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsVariationsStock: ', $e->getMessage(), PHP_EOL;\n    }\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsVariationsStock(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsVariationsStock');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products variations stock.\n    api_response = api_instance.get_rest_catalog_products_variations_stock(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_products_variations_stock: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productvariationsstock\/{id}.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns product variations stock.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_product_variations_stock_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductStock"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no product variations stock found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No product variations stock found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogProductVariationsStockId($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductVariationsStockId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        ProductStock result = apiInstance.getRestCatalogProductVariationsStockId(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductVariationsStockId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Returns product variations stock.\n    api_response = api_instance.get_rest_catalog_product_variations_stock_id(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_product_variations_stock_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsvariationsstockavailable.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products variations stock available.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_products_variations_stock_available",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products variations stock were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products variations stock found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsVariationsStockAvailable($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsVariationsStockAvailable: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsVariationsStockAvailable(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsVariationsStockAvailable');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products variations stock.\n    api_response = api_instance.get_rest_catalog_products_variations_stock_available(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_products_variations_stock_available: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/productsvariationsstockbyhandlingdays.{format}": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Returns all products variation stock by handling days.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_productsvariationsstockbyhandlingdays",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ProductStock"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no products variations stock were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No products variations stock found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\StockApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $page = 56; \/\/ int | Default 0\n    $page_size = 56; \/\/ int | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogProductsvariationsstockbyhandlingdays($format, $page, $page_size);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling StockApi->getRestCatalogProductsvariationsstockbyhandlingdays: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.StockApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n\n    StockApi apiInstance = new StockApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    Integer page = 56; \/\/ Integer | Default 0\n    Integer pageSize = 56; \/\/ Integer | Default 0\n    try {\n        List<ProductStock> result = apiInstance.getRestCatalogProductsvariationsstockbyhandlingdays(format, page, pageSize);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling StockApi#getRestCatalogProductsvariationsstockbyhandlingdays');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.StockApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    page = 56 # int | Default 0 (optional)\n    page_size = 56 # int | Default 0 (optional)\n\n    try:\n    # Returns all products variation stock by handling days.\n    api_response = api_instance.get_rest_catalog_productsvariationsstockbyhandlingdays(format, page=page, page_size=page_size)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling StockApi->get_rest_catalog_productsvariationsstockbyhandlingdays: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/tags.{format}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Lists all tags.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_tags",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no tags were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No tags found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TagApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogTags($format, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TagApi->getRestCatalogTags: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TagApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TagApi apiInstance = new TagApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        List<Tag> result = apiInstance.getRestCatalogTags(format, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TagApi#getRestCatalogTags');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TagApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Lists all tags.\n    api_response = api_instance.get_rest_catalog_tags(format, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TagApi->get_rest_catalog_tags: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/tag\/{id}.{format}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a single Tag.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_tag",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Tag"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no tag found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No tag found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TagApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string |\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogTag($format, $id, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TagApi->getRestCatalogTag: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TagApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TagApi apiInstance = new TagApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String |\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        Tag result = apiInstance.getRestCatalogTag(format, id, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TagApi#getRestCatalogTag');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TagApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str |\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get a single Tag.\n    api_response = api_instance.get_rest_catalog_tag(format, id, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TagApi->get_rest_catalog_tag: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/tagalllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a single Tag languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_tag_all_languages",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no tag languages found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No tag languages found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TagApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogTagAllLanguages($format, $id);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TagApi->getRestCatalogTagAllLanguages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TagApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TagApi apiInstance = new TagApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String |\n    try {\n        List<Tag> result = apiInstance.getRestCatalogTagAllLanguages(format, id);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TagApi#getRestCatalogTagAllLanguages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TagApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str |\n\n    try:\n    # Get a single Tag languages.\n    api_response = api_instance.get_rest_catalog_tag_all_languages(format, id)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TagApi->get_rest_catalog_tag_all_languages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/taxonomies.{format}": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "Lists all taxonomies.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_taxonomies",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "firstLevel",
                        "in": "query",
                        "description": "Send this parameter if only want to take first level categories",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Taxonomy"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no taxonomies were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No taxonomies found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TaxonomyApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n    $result = $apiInstance->getRestCatalogTaxonomies($format, $iso_code);\n    print_r($result);\n    } catch (Exception $e) {\n    echo 'Exception when calling TaxonomyApi->getRestCatalogTaxonomies: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TaxonomyApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TaxonomyApi apiInstance = new TaxonomyApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n    List<Taxonomy> result = apiInstance.getRestCatalogTaxonomies(format, isoCode);\n    System.out.println(result);\n    } catch (ApiException e) {\n    System.err.println('Exception when calling TaxonomyApi#getRestCatalogTaxonomies');\n    e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TaxonomyApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Lists all taxonomies.\n    api_response = api_instance.get_rest_catalog_taxonomies(format, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TaxonomyApi->get_rest_catalog_taxonomies: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/taxonomyalllanguages\/{id}.{format}": {
            "get": {
                "tags": [
                    "Taxonomy"
                ],
                "summary": "Returns the selected taxonomy all languages.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>24<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_taxonomyalllanguages",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Taxonomy"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no taxonomy found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No taxonomy found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TaxonomyApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $id = 'id_example'; \/\/ string |\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestCatalogTaxonomyalllanguages($format, $id, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TaxonomyApi->getRestCatalogTaxonomyalllanguages: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TaxonomyApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TaxonomyApi apiInstance = new TaxonomyApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String id = 'id_example'; \/\/ String |\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        List<Taxonomy> result = apiInstance.getRestCatalogTaxonomyalllanguages(format, id, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TaxonomyApi#getRestCatalogTaxonomyalllanguages');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TaxonomyApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    id = 'id_example' # str |\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Returns the selected taxonomy all languages.\n    api_response = api_instance.get_rest_catalog_taxonomyalllanguages(format, id, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TaxonomyApi->get_rest_catalog_taxonomyalllanguages: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/variations.{format}": {
            "get": {
                "tags": [
                    "Variation"
                ],
                "summary": "Returns all variations.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>10<\/td><td>1 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_variations",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default 0",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentTaxonomy",
                        "in": "query",
                        "description": "Taxonomy Tree Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Variation"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no variations were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No variations found in cache"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\VariationApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $page_size = 'page_size_example'; \/\/ string | Default 0\n    $page = 'page_example'; \/\/ string | Default 0\n\n    try {\n        $result = $apiInstance->getRestCatalogVariations($format, $page_size, $page);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling VariationApi->getRestCatalogVariations: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.VariationApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    VariationApi apiInstance = new VariationApi();\n    String format = 'format_example'; \/\/ String |\n    String pageSize = 'pageSize_example'; \/\/ String | Default 0\n    String page = 'page_example'; \/\/ String | Default 0\n    try {\n        List<Variation> result = apiInstance.getRestCatalogVariations(format, pageSize, page);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling VariationApi#getRestCatalogVariations');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.VariationApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    page_size = 'page_size_example' # str | Default 0 (optional)\n    page = 'page_example' # str | Default 0 (optional)\n\n    try:\n    # Returns all variations.\n    api_response = api_instance.get_rest_catalog_variations(format, page_size=page_size, page=page)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling VariationApi->get_rest_catalog_variations: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/catalog\/variation\/{id}.{format}": {
            "get": {
                "tags": [
                    "Variation"
                ],
                "summary": "Get a single variation.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>5 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_catalog_variation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Variation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no variation found with id X.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No variation found with id X"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\VariationApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id = 'id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestCatalogVariation($id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling VariationApi->getRestCatalogVariation: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.VariationApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    VariationApi apiInstance = new VariationApi();\n    String id = 'id_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        Variation result = apiInstance.getRestCatalogVariation(id, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling VariationApi#getRestCatalogVariation');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.VariationApi(swagger_client.ApiClient(configuration))\n    id = 'id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Get a single variation.\n    api_response = api_instance.get_rest_catalog_variation(id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling VariationApi->get_rest_catalog_variation: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/create.{format}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Submit an order",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_order_order_create",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomerOrderProcess"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returned when successful. To retrieve the created order ID, parse the location header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "order_id": "X"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Invalid order format."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers\/products has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers\/products has been found.."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when there are constrain conflicts.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "Found constrain conflicts."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\OrderProccess(); \/\/ \\Swagger\\Client\\Model\\OrderProccess |\n\n    try {\n        $apiInstance->postRestOrderOrderCreate($format, $body);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->postRestOrderOrderCreate: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String format = 'format_example'; \/\/ String |\n    OrderProccess body = new OrderProccess(); \/\/ OrderProccess |\n    try {\n        apiInstance.postRestOrderOrderCreate(format, body);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#postRestOrderOrderCreate');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.OrderProccess() # OrderProccess |  (optional)\n\n    try:\n    # Submit an order\n    api_instance.post_rest_order_order_create(format, body=body)\n    except ApiException as e:\n    print('Exception when calling OrderApi->post_rest_order_order_create: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/check.{format}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Check\/simulate an order and return the total order to paid.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_order_order_check",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomerOrderProcess"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderCheckResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Invalid order format."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers\/products has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers\/products has been found.."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when there are constrain conflicts.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "Found constrain conflicts."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\OrderProccess(); \/\/ \\Swagger\\Client\\Model\\OrderProccess |\n\n    try {\n        $result = $apiInstance->postRestOrderOrderCheck($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->postRestOrderOrderCheck: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String format = 'format_example'; \/\/ String |\n    OrderProccess body = new OrderProccess(); \/\/ OrderProccess |\n    try {\n        OrderCheckResponse result = apiInstance.postRestOrderOrderCheck(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#postRestOrderOrderCheck');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.OrderProccess() # OrderProccess |  (optional)\n\n    try:\n    # Check\/simulate an order and return the total order to paid.\n    api_response = api_instance.post_rest_order_order_check(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->post_rest_order_order_check: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/reference\/{reference}.{format}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get order information by customer reference.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_order_order_reference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderReferenceResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no order were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No order found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $reference = 'reference_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestOrderOrderReference($reference, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->getRestOrderOrderReference: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String reference = 'reference_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        OrderReferenceResponse result = apiInstance.getRestOrderOrderReference(reference, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#getRestOrderOrderReference');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    reference = 'reference_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Get order information by customer reference.\n    api_response = api_instance.get_rest_order_order_reference(reference, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->get_rest_order_order_reference: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/orderstatuses.{format}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get order statuses.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_order_order_statuses",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Response format, defaults to json",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "isoCode language",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/OrderStatus"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when not found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "Returned when not found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | Response format, defaults to json\n    $language = 'language_example'; \/\/ string | isoCode language\n\n    try {\n        $result = $apiInstance->getRestOrderOrderStatuses($format, $language);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->getRestOrderOrderStatuses: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String format = 'format_example'; \/\/ String | Response format, defaults to json\n    String language = 'language_example'; \/\/ String | isoCode language\n    try {\n        List<OrderStatus> result = apiInstance.getRestOrderOrderStatuses(format, language);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#getRestOrderOrderStatuses');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | Response format, defaults to json\n    language = 'language_example' # str | isoCode language (optional)\n\n    try:\n    # Get order statuses.\n    api_response = api_instance.get_rest_order_order_statuses(format, language=language)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->get_rest_order_order_statuses: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/{orderId}.{format}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get order information.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_order_order_id",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no order were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No order found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $order_id = 'order_id_example'; \/\/ string |\n    $format = 'format_example'; \/\/ string |\n\n    try {\n        $result = $apiInstance->getRestOrderOrderId($order_id, $format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->getRestOrderOrderId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String orderId = 'orderId_example'; \/\/ String |\n    String format = 'format_example'; \/\/ String |\n    try {\n        Order result = apiInstance.getRestOrderOrderId(orderId, format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#getRestOrderOrderId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    order_id = 'order_id_example' # str |\n    format = 'format_example' # str |\n\n    try:\n    # Get order information.\n    api_response = api_instance.get_rest_order_order_id(order_id, format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->get_rest_order_order_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/upload_invoice": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Upload a base64-encoded invoice to an order in PENDING INVOICE status.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_order_order_invoice",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful. To retrieve the created order ID, parse the location header",
                        "content": {
                            "application\/json": {
                                "example": [
                                    true
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when there are constrain conflicts.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "Returned when there are constrain conflicts."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $body = new \\Swagger\\Client\\Model\\Invoice(); \/\/ \\Swagger\\Client\\Model\\Invoice |\n\n    try {\n        $apiInstance->postRestOrderOrderInvoice($body);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->postRestOrderOrderInvoice: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    Invoice body = new Invoice(); \/\/ Invoice |\n    try {\n        apiInstance.postRestOrderOrderInvoice(body);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#postRestOrderOrderInvoice');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    body = swagger_client.Invoice() # Invoice |  (optional)\n\n    try:\n    # Upload a base64-encoded invoice to an order in PENDING INVOICE status.\n    api_instance.post_rest_order_order_invoice(body=body)\n    except ApiException as e:\n    print('Exception when calling OrderApi->post_rest_order_order_invoice: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/create\/multishipping.{format}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Submit an order multishipping.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_order_order_multishipping",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomerOrderProcess"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returned an order created.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrdersMultiShippingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when there are constrain conflicts.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "Returned when there are constrain conflicts."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\OrderProccess(); \/\/ \\Swagger\\Client\\Model\\OrderProccess |\n\n    try {\n        $result = $apiInstance->postRestOrderOrderMultishipping($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->postRestOrderOrderMultishipping: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    OrderApi apiInstance = new OrderApi();\n    String format = 'format_example'; \/\/ String |\n    OrderProccess body = new OrderProccess(); \/\/ OrderProccess |\n    try {\n        OrdersMultiShippingResponse result = apiInstance.postRestOrderOrderMultishipping(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#postRestOrderOrderMultishipping');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.OrderProccess() # OrderProccess |  (optional)\n\n    try:\n    # Submit an order multishipping.\n    api_response = api_instance.post_rest_order_order_multishipping(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->post_rest_order_order_multishipping: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/order\/check\/multishipping.{format}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Check\/simulate an order and return order multishipping.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_order_order_check_multishipping",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomerOrderProcess"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrdersCheckMultiShippingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when there are constrain conflicts.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "Returned when there are constrain conflicts."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\OrderApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\OrderProccess(); \/\/ \\Swagger\\Client\\Model\\OrderProccess |\n\n    try {\n        $result = $apiInstance->postRestOrderOrderCheckMultishipping($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling OrderApi->postRestOrderOrderCheckMultishipping: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.OrderApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n\n    OrderApi apiInstance = new OrderApi();\n    String format = 'format_example'; \/\/ String |\n    OrderProccess body = new OrderProccess(); \/\/ OrderProccess |\n    try {\n        OrdersCheckMultiShippingResponse result = apiInstance.postRestOrderOrderCheckMultishipping(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling OrderApi#postRestOrderOrderCheckMultishipping');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.OrderApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.OrderProccess() # OrderProccess |  (optional)\n\n    try:\n    # Check\/simulate an order and return the total order to paid.\n    api_response = api_instance.post_rest_order_order_check(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling OrderApi->post_rest_order_order_check: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/shipping\/carriers.{format}": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get the list of available carriers.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_shipping_carriers",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Carrier"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ShippingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n\n    try {\n        $result = $apiInstance->getRestShippingCarriers($format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ShippingApi->getRestShippingCarriers: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ShippingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ShippingApi apiInstance = new ShippingApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    try {\n        List<Carrier> result = apiInstance.getRestShippingCarriers(format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ShippingApi#getRestShippingCarriers');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ShippingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n\n    try:\n    # Get the list of available carriers.\n    api_response = api_instance.get_rest_shipping_carriers(format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ShippingApi->get_rest_shipping_carriers: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/shipping\/lowest-shipping-cost-by-country.{format}": {
            "post": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Returns the lowest shipping cost for a product reference when sent to the provided country.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_shipping_lowest_shipping_cost_by_country",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProductCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/ShippingCost"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ShippingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\ProductCountryRequest(); \/\/ \\Swagger\\Client\\Model\\ProductCountryRequest |\n\n    try {\n        $result = $apiInstance->postRestShippingLowestShippingCostByCountry($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ShippingApi->postRestShippingLowestShippingCostByCountry: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ShippingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ShippingApi apiInstance = new ShippingApi();\n    String format = 'format_example'; \/\/ String |\n    ProductCountryRequest body = new ProductCountryRequest(); \/\/ ProductCountryRequest |\n    try {\n        List<ShippingCost> result = apiInstance.postRestShippingLowestShippingCostByCountry(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ShippingApi#postRestShippingLowestShippingCostByCountry');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.ShippingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.ProductCountryRequest() # ProductCountryRequest |  (optional)\n\n    try:\n    # Returns the lowest shipping cost for a product reference when sent to the provided country.\n    api_response = api_instance.post_rest_shipping_lowest_shipping_cost_by_country(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ShippingApi->post_rest_shipping_lowest_shipping_cost_by_country: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/shipping\/lowest-shipping-costs-by-country\/{countryIsoCode}.{format}": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Returns the lowest shipping cost for every product when being shipped to the provided country.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>36<\/td><td>6 h<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_shipping_lowest_shipping_cost_by_country_countryIsoCode",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    },
                    {
                        "name": "countryIsoCode",
                        "in": "path",
                        "description": "example es",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/LowestShippingCost"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Returned when no shippingCosts were found in cache.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 409,
                                    "message": "No shippingCosts found in cache."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ShippingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n    $country_iso_code = 'country_iso_code_example'; \/\/ string | example es\n\n    try {\n        $result = $apiInstance->getRestShippingLowestShippingCostByCountryCountryIsoCode($format, $country_iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ShippingApi->getRestShippingLowestShippingCostByCountryCountryIsoCode: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ShippingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ShippingApi apiInstance = new ShippingApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    String countryIsoCode = 'countryIsoCode_example'; \/\/ String | example es\n    try {\n        List<LowestShippingCost> result = apiInstance.getRestShippingLowestShippingCostByCountryCountryIsoCode(format, countryIsoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ShippingApi#getRestShippingLowestShippingCostByCountryCountryIsoCode');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n\n    # create an instance of the API class\n    api_instance = swagger_client.ShippingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n    country_iso_code = 'country_iso_code_example' # str | example es\n\n    try:\n    # Returns the lowest shipping cost for every product when being shipped to the provided country.\n    api_response = api_instance.get_rest_shipping_lowest_shipping_cost_by_country_country_iso_code(format, country_iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ShippingApi->get_rest_shipping_lowest_shipping_cost_by_country_country_iso_code: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/shipping\/orders.{format}": {
            "post": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get shipping costs for an order.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_shipping_order_shipping",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CartShippingOption"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Shipping"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned when validation errors has been found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Validation errors has been found."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\ShippingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\CartShippingOption(); \/\/ \\Swagger\\Client\\Model\\CartShippingOption |\n\n    try {\n        $result = $apiInstance->postRestShippingOrderShipping($format, $body);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling ShippingApi->postRestShippingOrderShipping: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.ShippingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    ShippingApi apiInstance = new ShippingApi();\n    String format = 'format_example'; \/\/ String |\n    CartShippingOption body = new CartShippingOption(); \/\/ CartShippingOption |\n    try {\n        List<Shipping> result = apiInstance.postRestShippingOrderShipping(format, body);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling ShippingApi#postRestShippingOrderShipping');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.ShippingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.CartShippingOption() # CartShippingOption |  (optional)\n\n    try:\n    # Get shipping costs for an order.\n    api_response = api_instance.post_rest_shipping_order_shipping(format, body=body)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling ShippingApi->post_rest_shipping_order_shipping: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/tracking\/carriers.{format}": {
            "get": {
                "tags": [
                    "Tracking"
                ],
                "summary": "Get the list of available carriers.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_tracking_carriers",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Carrier"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TrackingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string | JSON or XML\n\n    try {\n        $result = $apiInstance->getRestTrackingCarriers($format);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TrackingApi->getRestTrackingCarriers: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TrackingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TrackingApi apiInstance = new TrackingApi();\n    String format = 'format_example'; \/\/ String | JSON or XML\n    try {\n        List<Carrier> result = apiInstance.getRestTrackingCarriers(format);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TrackingApi#getRestTrackingCarriers');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TrackingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str | JSON or XML\n\n    try:\n    # Get the list of available carriers.\n    api_response = api_instance.get_rest_tracking_carriers(format)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TrackingApi->get_rest_tracking_carriers: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/tracking\/orders.{format}": {
            "post": {
                "tags": [
                    "Tracking"
                ],
                "summary": "Get the list of available trackings for the passed orders.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "post_rest_tracking_orders_tracking",
                "parameters": [
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/TrackingOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/OrderTracking"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid order tracking format.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 400,
                                    "message": "Invalid order tracking format."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no carriers were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No carriers found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n\n    $apiInstance = new Swagger\\Client\\Api\\TrackingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $format = 'format_example'; \/\/ string |\n    $body = new \\Swagger\\Client\\Model\\TrackingOrder(); \/\/ \\Swagger\\Client\\Model\\TrackingOrder |\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->postRestTrackingOrdersTracking($format, $body, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TrackingApi->postRestTrackingOrdersTracking: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TrackingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n\n    TrackingApi apiInstance = new TrackingApi();\n    String format = 'format_example'; \/\/ String |\n    TrackingOrder body = new TrackingOrder(); \/\/ TrackingOrder |\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        List<OrderTracking> result = apiInstance.postRestTrackingOrdersTracking(format, body, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TrackingApi#postRestTrackingOrdersTracking');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TrackingApi(swagger_client.ApiClient(configuration))\n    format = 'format_example' # str |\n    body = swagger_client.TrackingOrder() # TrackingOrder |  (optional)\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get the list of available trackings for the passed orders.\n    api_response = api_instance.post_rest_tracking_orders_tracking(format, body=body, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TrackingApi->post_rest_tracking_orders_tracking: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/tracking\/order\/{idOrder}.{format}": {
            "get": {
                "tags": [
                    "Tracking"
                ],
                "summary": "Get the list of available trackings.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_tracking_order_tracking_by_order_id",
                "parameters": [
                    {
                        "name": "idOrder",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isoCode",
                        "in": "query",
                        "description": "es by default",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/OrderTracking"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when no trackings were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "No tracking information found."
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n    require_once(__DIR__ . '\/vendor\/autoload.php');\n    \/\/ Configure HTTP bearer authorization: Bearer\n    $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n    ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n    $apiInstance = new Swagger\\Client\\Api\\TrackingApi(\n    \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n    );\n    $id_order = 'id_order_example'; \/\/ string | Order id\n    $format = 'format_example'; \/\/ string |\n    $iso_code = 'iso_code_example'; \/\/ string | es by default\n\n    try {\n        $result = $apiInstance->getRestTrackingOrderTrackingByOrderId($id_order, $format, $iso_code);\n        print_r($result);\n    } catch (Exception $e) {\n        echo 'Exception when calling TrackingApi->getRestTrackingOrderTrackingByOrderId: ', $e->getMessage(), PHP_EOL;\n    }\n    ?>\n    "
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n    \/\/import io.swagger.client.ApiClient;\n    \/\/import io.swagger.client.ApiException;\n    \/\/import io.swagger.client.Configuration;\n    \/\/import io.swagger.client.auth.*;\n    \/\/import io.swagger.client.api.TrackingApi;\n\n    ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n    TrackingApi apiInstance = new TrackingApi();\n    String idOrder = 'idOrder_example'; \/\/ String | Order id\n    String format = 'format_example'; \/\/ String |\n    String isoCode = 'isoCode_example'; \/\/ String | es by default\n    try {\n        List<OrderTracking> result = apiInstance.getRestTrackingOrderTrackingByOrderId(idOrder, format, isoCode);\n        System.out.println(result);\n    } catch (ApiException e) {\n        System.err.println('Exception when calling TrackingApi#getRestTrackingOrderTrackingByOrderId');\n        e.printStackTrace();\n    }\n    "
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n    import time\n    import swagger_client\n    from swagger_client.rest import ApiException\n    from pprint import pprint\n\n    # create an instance of the API class\n    api_instance = swagger_client.TrackingApi(swagger_client.ApiClient(configuration))\n    id_order = 'id_order_example' # str | Order id\n    format = 'format_example' # str |\n    iso_code = 'iso_code_example' # str | es by default (optional)\n\n    try:\n    # Get the list of available trackings.\n    api_response = api_instance.get_rest_tracking_order_tracking_by_order_id(id_order, format, iso_code=iso_code)\n    pprint(api_response)\n    except ApiException as e:\n    print('Exception when calling TrackingApi->get_rest_tracking_order_tracking_by_order_id: %s\\n' % e)\n    "
                    }
                ]
            }
        },
        "\/rest\/user\/purse.{format}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the ammount of money available in the purse.",
                "description": "<h3><b>Rate Limit<\/b><\/h3><table width=50px><thead><tr><th>Max Requests<\/th><th>Period<\/th><\/tr><\/thead><tbody><tr><td>1<\/td><td>1 s<\/td><\/tr><\/tbody><\/table>",
                "operationId": "get_rest_user_purse",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "JSON or XML",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "json|xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned when successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned when not available ammount of money available were found.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 404,
                                    "message": "Available ammount of money available were not found"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Returned on invalid Content-Type header.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 415,
                                    "message": "Returned on invalid Content-Type header."
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Exceeded requests limits.",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "code": 429,
                                    "message": "Exceeded requests limits."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "php",
                        "label": "PHP",
                        "source": "<?php\n     require_once(__DIR__ . '\/vendor\/autoload.php');\n     \/\/ Configure HTTP bearer authorization: Bearer\n     $config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n     ->setAccessToken('YOUR_ACCESS_TOKEN');\n\n     $apiInstance = new Swagger\\Client\\Api\\UserApi(\n     \/\/ If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n     \/\/ This is optional, `GuzzleHttp\\Client` will be used as default.\n     new GuzzleHttp\\Client(),\n     $config\n     );\n     $format = 'format_example'; \/\/ string | JSON or XML\n\n     try {\n         $result = $apiInstance->getRestUserPurse($format);\n         print_r($result);\n     } catch (Exception $e) {\n         echo 'Exception when calling UserApi->getRestUserPurse: ', $e->getMessage(), PHP_EOL;\n     }\n     ?>"
                    },
                    {
                        "lang": "java",
                        "label": "Java",
                        "source": "\/\/ Import classes:\n     \/\/import io.swagger.client.ApiClient;\n     \/\/import io.swagger.client.ApiException;\n     \/\/import io.swagger.client.Configuration;\n     \/\/import io.swagger.client.auth.*;\n     \/\/import io.swagger.client.api.UserApi;\n\n     ApiClient defaultClient = Configuration.getDefaultApiClient();\n\n     UserApi apiInstance = new UserApi();\n     String format = 'format_example'; \/\/ String | JSON or XML\n     try {\n         String result = apiInstance.getRestUserPurse(format);\n         System.out.println(result);\n     } catch (ApiException e) {\n         System.err.println('Exception when calling UserApi#getRestUserPurse');\n         e.printStackTrace();\n     }"
                    },
                    {
                        "lang": "python",
                        "label": "Python",
                        "source": "from __future__ import print_function\n     import time\n     import swagger_client\n     from swagger_client.rest import ApiException\n     from pprint import pprint\n\n     # create an instance of the API class\n     api_instance = swagger_client.UserApi(swagger_client.ApiClient(configuration))\n     format = 'format_example' # str | JSON or XML\n\n     try:\n     # Get the ammount of money available in the purse..\n     api_response = api_instance.get_rest_user_purse(format)\n     pprint(api_response)\n     except ApiException as e:\n     print('Exception when calling UserApi->get_rest_user_purse: %s\\n' % e)\n     "
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attribute": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "attributeGroup": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isoCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AttributeGroup": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isoCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentCategory": {
                        "type": "integer",
                        "nullable": true
                    },
                    "dateAdd": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpd": {
                        "type": "string",
                        "nullable": true
                    },
                    "urlImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "isoCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Language": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "isoCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Manufacturer": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "urlImage": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "integer"
                    },
                    "values": {
                        "oneOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ProductCategory": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductCustomer": {
                "properties": {
                    "manufacturer": {
                        "type": "integer",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer"
                    },
                    "sku": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "depth": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "dateUpd": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "integer",
                        "nullable": true
                    },
                    "dateUpdDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpdImages": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpdStock": {
                        "type": "string",
                        "nullable": true
                    },
                    "wholesalePrice": {
                        "type": "string",
                        "nullable": true
                    },
                    "retailPrice": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateAdd": {
                        "type": "string",
                        "nullable": true
                    },
                    "video": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "integer",
                        "nullable": true
                    },
                    "attributes": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "categories": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "images": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "taxRate": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "taxId": {
                        "type": "integer",
                        "nullable": true
                    },
                    "inShopsPrice": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "logisticClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "tags": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dateUpdProperties": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpdCategories": {
                        "type": "string",
                        "nullable": true
                    },
                    "priceLargeQuantities": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PriceLargeQuantity"
                        },
                        "nullable": true
                    },
                    "intrastat": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductInformation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "sku": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "isoCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpdDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "shortDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "descriptionRetailer": {
                        "type": "string",
                        "nullable": true
                    },
                    "translation": {
                        "type": "string",
                        "nullable": true
                    },
                    "metaKeywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductImage": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Image"
                        }
                    }
                },
                "type": "object"
            },
            "ProductStock": {
                "required": [
                    "stocks"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "stocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Stock"
                        }
                    }
                },
                "type": "object"
            },
            "ProductStockProcess": {
                "title": "product_sku_request",
                "properties": {
                    "product_sku_request": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductStockRequest"
                        }
                    }
                },
                "type": "object"
            },
            "ProductTag": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "sku": {
                        "type": "string",
                        "nullable": true
                    },
                    "tag": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/Tag"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ProductTaxonomy": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "taxonomy": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductVariation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "sku": {
                        "title": "@Groups({\"product_variation\"})",
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string"
                    },
                    "extraWeight": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "nullable": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "wholesalePrice": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "retailPrice": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "inShopsPrice": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "nullable": true
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "nullable": true
                    },
                    "depth": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "nullable": true
                    },
                    "priceLargeQuantities": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PriceLargeQuantity"
                        },
                        "nullable": true
                    },
                    "logisticClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13Packaging": {
                        "type": "string",
                        "nullable": true
                    },
                    "intrastat": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Tag": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "linkRewrite": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Taxonomy": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentTaxonomy": {
                        "type": "integer",
                        "nullable": true
                    },
                    "dateAdd": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateUpd": {
                        "type": "string",
                        "nullable": true
                    },
                    "urlImages": {
                        "type": "string",
                        "nullable": true
                    },
                    "isoCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Variation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attribute"
                        }
                    }
                },
                "type": "object"
            },
            "CustomerOrderProcess": {
                "properties": {
                    "order": {
                        "$ref": "#\/components\/schemas\/CustomerOrder"
                    }
                },
                "type": "object"
            },
            "OrderCheckResponse": {
                "properties": {
                    "totalWithoutTaxesAndWithoutShippingCost": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "totalWithoutTaxes": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderReferenceResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalPaidTaxIncl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderStatus": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "language",
                    "paymentMethod",
                    "carriers",
                    "shippingAddress",
                    "products"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "internalReference": {
                        "description": "The unique identifier of the user.",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1
                    },
                    "stockLockReference": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "nullable": true
                    },
                    "dateAdd": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalPaidTaxIncl": {
                        "type": "number",
                        "format": "float"
                    },
                    "totalPaidTaxExcl": {
                        "type": "number",
                        "format": "float"
                    },
                    "totalShippingTaxExcl": {
                        "type": "number",
                        "format": "float"
                    },
                    "totalShippingTaxIncl": {
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "moneybox",
                            "bankwire",
                            "paypal",
                            "credit",
                            "confirming"
                        ]
                    },
                    "carriers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Carrier2"
                        }
                    },
                    "shippingAddress": {
                        "$ref": "#\/components\/schemas\/Address"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Product"
                        }
                    },
                    "sellingChannel": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateAmazon": {
                        "type": "string",
                        "nullable": true
                    },
                    "disallowStockLocked": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "additionalParameters": {
                        "type": "string",
                        "nullable": true
                    },
                    "maxExpeditionDateTime": {
                        "type": "string",
                        "nullable": true
                    },
                    "maxDeliveryDateTime": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "required": [
                    "idOrder",
                    "file",
                    "mimeType",
                    "amount",
                    "concept"
                ],
                "properties": {
                    "idOrder": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string",
                        "enum": [
                            "application\/pdf",
                            "image\/png",
                            "image\/jpeg"
                        ]
                    },
                    "amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "concept": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrdersMultiShippingResponse": {
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderMultiShippingResponse"
                        },
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderErrorResponse"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrdersCheckMultiShippingResponse": {
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderCheckMultiShippingResponse"
                        },
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderErrorResponse"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Carrier": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "shippingServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ShippingService"
                        },
                        "nullable": true
                    },
                    "shippingCountries": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Country"
                        },
                        "nullable": true
                    },
                    "excludedProductReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "excludedCategoryIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductCountryRequest": {
                "required": [
                    "product_country"
                ],
                "properties": {
                    "product_country": {
                        "$ref": "#\/components\/schemas\/ProductCountry"
                    }
                },
                "type": "object"
            },
            "ShippingCost": {
                "properties": {
                    "shippingCost": {
                        "type": "string",
                        "nullable": true
                    },
                    "carrier": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CarrierShippingCost"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "LowestShippingCost": {
                "properties": {
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "cost": {
                        "type": "string",
                        "nullable": true
                    },
                    "carrierId": {
                        "type": "string",
                        "nullable": true
                    },
                    "carrierName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CartShippingOption": {
                "properties": {
                    "order": {
                        "$ref": "#\/components\/schemas\/OrderCartShippingOption"
                    }
                },
                "type": "object"
            },
            "Shipping": {
                "properties": {
                    "shippingOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ShippingOption"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TrackingOrder": {
                "properties": {
                    "track": {
                        "$ref": "#\/components\/schemas\/Track"
                    }
                },
                "type": "object"
            },
            "OrderTracking": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "trackings": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Tracking"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PriceLargeQuantity": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Image": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "isCover": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "whiteBackground": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Stock": {
                "required": [
                    "quantity",
                    "minHandlingDays",
                    "maxHandlingDays"
                ],
                "properties": {
                    "quantity": {
                        "type": "integer"
                    },
                    "minHandlingDays": {
                        "type": "integer"
                    },
                    "maxHandlingDays": {
                        "type": "integer"
                    },
                    "warehouse": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductStockRequest": {
                "title": "product_stock_request",
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductSkuRequest"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerOrder": {
                "properties": {
                    "internalReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "carriers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CustomerCarrier"
                        }
                    },
                    "shippingAddress": {
                        "$ref": "#\/components\/schemas\/CustomerAddress"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CustomerProduct"
                        }
                    }
                },
                "type": "object"
            },
            "Carrier2": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "chrono",
                            "correos",
                            "gls",
                            "ups",
                            "dhl",
                            "tnt",
                            "seur",
                            "correos international",
                            "exw",
                            "fba",
                            "special preparation",
                            "pc",
                            "pallet delivery",
                            "dachser",
                            "dhl freight",
                            "sfp",
                            "postal service",
                            "chronopost",
                            "standard shipment",
                            "db schenker"
                        ],
                        "nullable": true
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "keyShipping": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Address": {
                "required": [
                    "firstName",
                    "lastName",
                    "country",
                    "postcode",
                    "town",
                    "address",
                    "phone",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "firstName": {
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 2,
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 70,
                        "minLength": 3
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 3
                    },
                    "email": {
                        "type": "string"
                    },
                    "vatNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 0,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "reference",
                    "quantity"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priceTaxIncl": {
                        "type": "number",
                        "format": "float"
                    },
                    "priceTaxExcl": {
                        "type": "number",
                        "format": "float"
                    },
                    "internalReference": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderMultiShippingResponse": {
                "properties": {
                    "productReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "warehouse": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderErrorResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "productReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "warehouse": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderCheckMultiShippingResponse": {
                "properties": {
                    "productReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "totalWithoutTaxesAndWithoutShippingCost": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalWithoutTaxes": {
                        "type": "string",
                        "nullable": true
                    },
                    "total": {
                        "type": "string",
                        "nullable": true
                    },
                    "warehouse": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ShippingService": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "delay": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "transportMethod": {
                        "type": "string",
                        "nullable": true
                    },
                    "serviceName": {
                        "type": "string",
                        "nullable": true
                    },
                    "pod": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Country": {
                "properties": {
                    "isoCountry": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductCountry": {
                "required": [
                    "reference",
                    "countryIsoCode"
                ],
                "properties": {
                    "reference": {
                        "type": "string"
                    },
                    "countryIsoCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CarrierShippingCost": {
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderCartShippingOption": {
                "required": [
                    "products"
                ],
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProductCartShippingOption"
                        }
                    },
                    "delivery": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/Delivery"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "ShippingOption": {
                "properties": {
                    "shippingService": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/ShippingService"
                            }
                        ]
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Track": {
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OrderRequest"
                        }
                    }
                },
                "type": "object"
            },
            "Tracking": {
                "properties": {
                    "trackingNumber": {
                        "type": "string"
                    },
                    "statusDescription": {
                        "type": "string"
                    },
                    "statusDate": {
                        "type": "string"
                    },
                    "carrier": {
                        "$ref": "#\/components\/schemas\/Carrier"
                    },
                    "descriptionTranslated": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductSkuRequest": {
                "title": "product_sku_request",
                "properties": {
                    "sku": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomerCarrier": {
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerAddress": {
                "required": [
                    "firstName",
                    "lastName",
                    "country",
                    "postcode",
                    "town",
                    "address",
                    "phone",
                    "email"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 2
                    },
                    "lastName": {
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 2,
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 70,
                        "minLength": 3
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 3
                    },
                    "email": {
                        "type": "string"
                    },
                    "vatNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 0,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerProduct": {
                "required": [
                    "reference",
                    "quantity"
                ],
                "properties": {
                    "reference": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProductCartShippingOption": {
                "properties": {
                    "reference": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Delivery": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "isoCountry": {
                        "type": "string"
                    },
                    "postCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderRequest": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}
